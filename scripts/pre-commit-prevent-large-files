#!/bin/bash
#
# Inspired by: https://gist.github.com/benmccallum/28e4f216d9d72f5965133e6c43aaff6e
#
# This is a pre-commit hook that ensures attempts to commit files that are
# larger than $limit to your _local_ repo fail, with a helpful error message.
#
# Maximum file size limit in bytes

log() {
  echo "$*" >&2
}

limit=$(( 100 * 2**10 )) # 100kB

# Move to the repo root so git files paths make sense
repo_root=$( git rev-parse --show-toplevel )
cd $repo_root

empty_tree=$( git hash-object -t tree /dev/null )

if git rev-parse --verify HEAD > /dev/null 2>&1; then
  against=HEAD
else
  against="$empty_tree"
fi

# Set split so that for loop below can handle spaces in file names by splitting on line breaks
IFS='
'

shouldFail=false
# `--diff-filter=d` -> skip deletions
for file in $( git diff-index --cached --diff-filter=d --name-only "$against" ); do
  # Skip for directories (git submodules)
  if [[ -f "$file" ]]; then
    file_size=$( ls -lan $file | awk '{ print $5 }' )
    if [ "$file_size" -gt  "$limit" ]; then
    log "File $file is $file_size bytes, which is larger than our configured limit of ${limit}"
    shouldFail=true
    fi
  fi
done

if $shouldFail; then
  exit 1;
fi
